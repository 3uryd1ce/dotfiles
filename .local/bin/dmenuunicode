#!/bin/sh
# shellcheck disable=SC1090

# rewrite of Luke Smith's dmenuunicode:
# https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/dmenuunicode

# his dotfiles can be accessed here:
# https://github.com/LukeSmithxyz/voidrice

set -e

err() {
	printf '%s\n' "$*" >&2
	exit 1
}

menu() {
	dmenu -i -l 20 \
		-fn 'mono-12' \
		-fn 'Symbola-12' \
		-nb "${background:-#040516}" \
		-nf "${color3:-#9974e7}" \
		-sb "${background:-#040516}" \
		-sf "${foreground:-#e0cef3}"
}


readonly DEPENDENCIES='dmenu
notify-send
xclip'

echo "${DEPENDENCIES}" | while read -r dependency; do
	command -v -- "${dependency}" >/dev/null 2>&1 ||
		err "${dependency} not found in PATH."
done


[ -n "${DISPLAY}" ] || err "${0##*/} requires a graphical environment."

readonly COLORS_SH="${XDG_CACHE_HOME:-${HOME}/.cache}/wal/colors.sh"
. "${COLORS_SH}"


readonly EMOJI_FILE="${XDG_DATA_HOME:-${HOME}/.local/share}/emoji"
EMOJI="$(cut -d ';' -f 1 -- "${EMOJI_FILE}" | menu)"
EMOJI="${EMOJI%% *}"
readonly EMOJI

[ -n "${EMOJI}" ] || err 'Must choose an emoji.'

grep -Fq -- "${EMOJI}" "${EMOJI_FILE}" || err "Emoji not found in ${EMOJI_FILE}."


if printf '%s' "${EMOJI}" | xclip -selection clipboard; then
	exec notify-send 'Emoji copied to clipboard.'
else
	err 'Unable to grab emoji with xclip(1).'
fi
