#!/usr/bin/env sh
# shellcheck disable=SC1090,SC2154

# rewrite of Luke Smith's dmenuunicode:
# https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/dmenuunicode

# his dotfiles can be accessed here:
# https://github.com/LukeSmithxyz/voidrice

# check that LIBRARY is readable. if it is, source it so its
# functions are available. if not, exit due to potentially unpredictable
# behavior.
readonly LIBRARY="${HOME}/.local/bin/common.sh"

if [ -r "${LIBRARY}" ]; then
  . "${LIBRARY}"

else
  cat >&2 <<EOF
${LIBRARY} doesn't exist or isn't readable.
${0##*/} may not function correctly without it; exiting for safety.
EOF

  exit 1

fi


grab_emoji() {
  readonly EMOJI_FILE="${XDG_DATA_HOME}/emoji"
  [ -f "${EMOJI_FILE}" ] || err "${EMOJI_FILE} is not a file."
  [ -r "${EMOJI_FILE}" ] || err "${EMOJI_FILE} is not readable."

  chosen_entry="$(cut -d ';' -f 1 -- "${EMOJI_FILE}" | menu -l 20 -fn 'Symbola-20')"
  readonly chosen_entry

  [ -n "${chosen_entry}" ] || err 'Must choose an emoji.'

  readonly emoji="${chosen_entry%% *}"

  grep -q -- "^${emoji}" "${EMOJI_FILE}" || err "Emoji not found in ${EMOJI_FILE}."

  # important to use printf %s here, as ${emoji} is user input
  if printf '%s' "${emoji}" | yank; then
    notify-send -- "${emoji} copied to clipboard."

  else
    err 'Unable to grab emoji with xclip(1).'

  fi
}


prereqs() {
  check_grafix

  check_deps <<'EOF'
dmenu
notify-send
xclip
EOF

  import_colors_sh
}


prereqs
grab_emoji
