#!/usr/bin/env sh
# shellcheck disable=SC1090
# Copyright (c) 2020-2021 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -e


err() {
  printf '%s\n' "$*" >&2
  exit 1
}


usage() {
  cat >&2 <<EOF
usage:
${0##*/} [command] [dir for fzf]
EOF

  exit 1
}


check_deps() {
  while read -r dependency; do

    if [ -x "$(command -v -- "${dependency}")" ]; then
      continue

    else
      err "${dependency} not found in PATH or not executable."

    fi

  done
}


args_needed() {
  case "$1" in

    ''|*[!0-9]*)
      err "args_needed() needs a number."

      ;;

  esac

  err "$1 argument(s) required."
}


[ "$#" -eq 2 ] || args_needed 2

check_deps <<EOF
fzf
$1
EOF

[ -r "$2" ] || err "$2 is not readable."
[ -d "$2" ] || err "$2 is not a directory."

chosen_file="$( (cd "$2" && fzf) )"
readonly chosen_file

full_path_of_file="$(readlink -f -- "$2/${chosen_file}")"
readonly full_path_of_file

[ -n "${full_path_of_file}" ] || err 'A file must be chosen.'
[ -r "${full_path_of_file}" ] || err 'File not readable.'

"$1" "${full_path_of_file}"
