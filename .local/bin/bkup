#!/usr/bin/env sh
# Copyright (c) 2020 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
set -e

compressor="bzip2"
compressor_args="-c"
date=$(date '+%Y-%m-%d')
drive=$(mount -v | awk '/mnt/{print $2}' | sed -e 's/(//' -e 's/\..*//')
extension=".dump.bz2"

sec_print () {
  printf "%s\\n" "$@"
}

err () {
  sec_print "[$(date +'%Y-%m-%d|%H:%M:%S')]: $*" >&2
  exit 1
}

bkup() {
/sbin/dump -0auf - / \
  | "${compressor}" ${compressor_args} \
  > /mnt/"${date}"/root"${extension}" &

/sbin/dump -0auf - /var \
  | "${compressor}" ${compressor_args} \
  > /mnt/"${date}"/var"${extension}" &

/sbin/dump -0auf - /home \
  | "${compressor}" ${compressor_args} \
  > /mnt/"${date}"/home"${extension}" &

/sbin/dump -0auf - /usr/local \
  | "${compressor}" ${compressor_args} \
  > /mnt/"${date}"/usr-local"${extension}" &

/sbin/dump -0auf - /usr/x11r6 \
  | "${compressor}" ${compressor_args} \
  > /mnt/"${date}"/usr-x11r6"${extension}" &

/sbin/dump -0auf - /usr \
  | "${compressor}" ${compressor_args} \
  > /mnt/"${date}"/usr"${extension}" &
wait
}

main () {
banner "bkup"
cat <<EOF

This script creates level 0 dumps of /root, /var, /home, /usr/local, /usr/X11R6,
and /usr. It compresses them using ${compressor} and places the backups inside
/mnt in a folder named ${date}. It then automatically unmounts /mnt,
detaches the CRYPTO volume, and powers off.

Is this acceptable (y/n)?
EOF
read -r continue

if [ "${continue}" = "n" ]; then
  sec_print "Goodbye."
elif [ "${continue}" = "y" ]; then
  mkdir -p "/mnt/${date}" || err "Couldn't create backup directory."
  sec_print "Dumping filesystems..."
  bkup || err "Backup failed."
  umount /mnt
  bioctl -d "${drive}" || err "Couldn't detach CRYPTO volume."
  shutdown -p now
else
  err "You must answer with 'y' or 'n'."
fi
}

main
