#!/usr/bin/env perl
# Copyright (c) 2022 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use autodie;
use strict;
use warnings;

use feature 'say';

use File::Basename 'fileparse';
use File::Find;
use List::Util 'shuffle';

sub usage {
	my $program_name = fileparse $0;
	die <<EOF;
$program_name [filetype] [directory]

filetype can be:
video - webm, mp4, mkv
image - jpg, jpeg, png
any - matches all files
EOF
}


my $filetype_to_look_for = shift or usage;
my $directory_to_search_in = shift or usage;
-e $directory_to_search_in or die "'$directory_to_search_in doesn't exist.\n";
-d _ or die "'$directory_to_search_in isn't a directory.\n";


my @wanted_files;
sub wanted {
	-f or return;

	if ($filetype_to_look_for eq 'video') {
		/\.(?:mkv|mp4|webm)\z/ or return;
	} elsif ($filetype_to_look_for eq 'image') {
		/\.(?:jpg|jpeg|png)\z/ or return;
	} elsif ($filetype_to_look_for eq 'any') {
		# do nothing
	} else {
		die "'$filetype_to_look_for' isn't a supported filetype.\n";
	}

	push @wanted_files, $File::Find::name;
}


File::Find::find({wanted => \&wanted}, $directory_to_search_in);
say join("\n", shuffle(@wanted_files)) if @wanted_files;
