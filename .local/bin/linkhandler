#!/bin/sh
# shellcheck disable=SC1090
# Copyright (c) 2020-2022 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -e


local_ftp() { ftp -nU '' "$@"; }

err() {
	printf '%s\n' "$*" >&2
	exit 1
}

readonly DEPENDENCIES='dmenu
ftp
mpv
notify-send
sxiv
xclip
yt-dlp'

readonly OPTIONS='copy duration
copy title
download audio
download file
download video
listen
print duration
read
view image
watch
watch (loop)'


if [ -n "$1" ]; then
	readonly URL="$1"
elif [ ! -t 0 ]; then
	read -r URL && readonly URL
else
	err "${0##*/} needs a URL!"
fi


echo "${DEPENDENCIES}" | while read -r dependency; do
	command -v -- "${dependency}" >/dev/null 2>&1 ||
		err "${dependency} not found in PATH or not executable."
done


echo "${OPTIONS}" |
	case "$(fzf)" in

		'copy duration')
			DURATION="$(yt-dlp --get-duration -- "${URL}" 2>/dev/null)"
			readonly DURATION

			[ -n "${DURATION}" ] || err 'Empty input, so no duration was yanked.'

			printf '%s' "${DURATION}" | xclip -selection clipboard
			notify-send -- "Copied video duration (${DURATION})."
			;;

		'copy title')
			TITLE="$(yt-dlp -e -- "${URL}" 2>/dev/null)"
			readonly TITLE

			[ -n "${TITLE}" ] || err 'Empty input, so no title yanked.'

			printf '%s' "${TITLE}" | xclip -selection clipboard
			notify-send -- "${TITLE} yanked."
			;;

		'download audio')
			tmux new-window "yt-dlp -xf bestaudio/best -- ${URL};
			read"
			;;

		'download file')
			tmux new-window "( cd ${HOME}/Downloads && local_ftp -- ${URL} );
			read"
			;;

		'download video')
			tmux new-window "yt-dlp -- ${URL};
			read"
			;;

		'listen')
			tmux new-window "mpva -- ${URL}"
			;;

		'print duration')
			DURATION="$(yt-dlp --get-duration -- "${URL}" 2>/dev/null)"

			[ -n "${DURATION}" ] || err 'Empty input, so no duration printed.'

			notify-send -- "${DURATION}"
			;;

		'read')
			tmux new-window "local_ftp -o - -- ${URL} | zathura -"
			;;

		'view image')
			viewimg "${URL}"
			;;

		'watch')
			tmux new-window "mpv -- ${URL}"
			;;

		'watch (loop)')
			tmux new-window "mpv --loop -- ${URL}"
			;;

		*)
			err "${0##*/} doesn't support that option."
			;;

	esac
