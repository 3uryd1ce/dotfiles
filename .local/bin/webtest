#!/usr/bin/env sh
# shellcheck disable=SC1090
set -e
# Copyright (c) 2020-2021 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# check that the library file is readable. if it is, source it so its
# functions are available. if not, exit due to potentially unpredictable
# behavior.
readonly library="${HOME}/.local/bin/common.sh"
if [ -r "${library}" ]; then
  . "${library}"
else
  cat >&2 <<EOF
${library} doesn't exist or isn't readable.
${0##*/} may not function correctly without it; exiting for safety.
EOF
  exit 1
fi

usage() { err "usage: ${0##*/} [domain] [md dir] [srv dir]"; }

# TODO: articles.md should be a variable instead of hard-coded
gen_site() {
  ssg6 "${markdowndir}" "${htmldir}" "${unpriv_user}" \
    "${site##*//}" >/dev/null 2>&1
  rssg "${markdowndir}/articles.md" 2>/dev/null \
    "Newsletter - ${site##*//}" > "${htmldir}/rss.xml"
}

sync_site() {
  # oddly, can't call this in the form 'priv sync_site' in
  # main(). thus, a heredoc is needed.
  priv /usr/bin/env sh <<EOF
rm -rf ${srvdir:?}
mkdir -p ${srvdir}
mv ${htmldir}/* ${srvdir}/
find ${srvdir} \( -type f ! -perm 644 -exec chmod 644 '{}' \; \) \
  -o \( -type d ! -perm 755 -exec chmod 755 '{}' \; \)
rcctl reload httpd >/dev/null
EOF
}

cleanup() {
  rm -rf "${htmldir:?}"
}

prereqs() {
  check_deps <<'EOF'
httpd
rcctl
EOF
  readonly args_needed=3
  [ "$#" = "${args_needed}" ] || usage
}

# TODO: a conf file is likely a better implementation than positional
# parameters in the long run.
main() {
  prereqs "$@"
  readonly site="$1"
  readonly markdowndir="$2"
  readonly srvdir="$3"
  readonly htmldir="$(mktemp -d)"
  readonly unpriv_user="$(id -un)"
  gen_site || (cleanup; err 'Unable to generate site.')
  sync_site || (cleanup; err 'Unable to sync web server.')
  cleanup
  echo 'Web server synced.'
}

main "$@"
