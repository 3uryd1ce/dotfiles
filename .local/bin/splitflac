#!/bin/sh
# shellcheck disable=SC1090
# Copyright (c) 2020-2022 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -e


err() {
  printf '%s\n' "$*" >&2
  exit 1
}


usage() {
  err "usage:
${0##*/} [cue file] [FLAC file]

-c : convert 24bit flac to 16bit before splitting (sox needed)
-d : delete the original FLAC file."
}


check_deps() {
  while read -r dependency; do

    [ -x "$(command -v -- "${dependency}")" ] \
      || err "${dependency} not found in PATH or not executable."

  done
}


# determines which executable name to use for cuetag.
assign_cuetag() {
  if [ -x "$(command -v -- 'cuetag')" ]; then
    readonly CUETAG='cuetag'

  elif [ -x "$(command -v -- 'cuetag.sh')" ]; then
    readonly CUETAG='cuetag.sh'

  else
    err 'Neither cuetag nor cuetag.sh found.'

  fi
}


# converts a 24-bit FLAC file to a 16-bit FLAC file with sox(1).
#
# $1 is a FLAC file to be converted.
conv16() {
  STAGING_FILE="${1%.flac}-staging.flac"
  readonly STAGING_FILE

  # http://sox.sourceforge.net/Docs/FAQ
  #
  # according to sox(1), most noise shaping filters are only available
  # at 44.1kHz, so that is the chosen sample rate.
  if sox "$1" -SGb 16 "${STAGING_FILE}" rate -v 44100 dither -s; then
    [ "${DELETE}" = 'yes' ] && rm -- "$1"
    [ -e "$1" ] && mv -- "$1" "$1-24bit.bak"

    mv -- "${STAGING_FILE}" "$1"

  else
    err 'Failed to convert 24-bit FLAC file to 16-bit.'

  fi
}


splitflac() {
  [ -e "$2.bak" ] && err "$2.bak exists, exiting to prevent clobbering."

  # spaces in shnsplit filename messes up cue tagging, so just leave
  # the default in place. it's the only way to be sure that we won't run
  # into that issue, because %t will often add spaces too.
  if ! cuebreakpoints -- "$1" | shnsplit -o flac -- "$2"; then
    err 'Unable to split the FLAC file.'
  fi

  [ "${DELETE}" = 'yes' ] && rm -- "$2"
  [ -e "$2" ] && mv -- "$2" "$2.bak"

  "${CUETAG}" "$1" ./*.flac || err 'Unable to tag FLAC files.'
}


# cuetag is checked in assign_cuetag() rather than check_deps() since
# the executable's name isn't consistent among operating systems.
check_deps <<'EOF'
cuebreakpoints
flac
shnfix
shnsplit
EOF

while getopts cd opt; do

  case "${opt}" in
    c) readonly CONVERT='yes' ;;
    d) readonly DELETE='yes'  ;;
    *) usage                  ;;
  esac

done

shift $((OPTIND - 1))

[ -z "$1" ] && usage
[ -z "$2" ] && usage

assign_cuetag

[ "${CONVERT}" = 'yes' ] && {
  # makes sense to check dependency only when it's really needed
  echo 'sox' | check_deps
  conv16 "$2"
}

# checks for sector boundary errors and fixes them if they are present
# before splitting the FLAC file.
shnfix -c -- "$2" && {
  shnfix -o flac -- "$2"
  mv -- "${2%.flac}-fixed.flac" "$2"
}

CRLESS_CUESHEET="$(mktemp)"
readonly CRLESS_CUESHEET

# removes carriage returns from cuesheet
tr -d '\r' <"$1" >"${CRLESS_CUESHEET}"
mv "${CRLESS_CUESHEET}" "$1"

splitflac "$1" "$2"
