#!/usr/bin/env sh
# shellcheck disable=SC1090
set -e
# Copyright (c) 2020-2021 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# check that the library file is readable. if it is, source it so its
# functions are available. if not, exit due to potentially unpredictable
# behavior.
readonly library="${HOME}/.local/bin/common.sh"
if [ -r "${library}" ]; then
  . "${library}"
else
  cat >&2 <<EOF
${library} doesn't exist or isn't readable.
${0##*/} may not function correctly without it; exiting for safety.
EOF
  exit 1
fi

usage() {
  cat >&2 <<EOF
${0##*/} requires ${args_needed} argument(s).

usage:
${0##*/} [cue file] [FLAC file]

-c : convert 24bit flac to 16bit before splitting (ffmpeg needed)
-d : delete the original FLAC file.
EOF
  exit 1
}

# determines which executable name to use for cuetag.
assign_cuetag() {
  if [ -x "$(command -v 'cuetag')" ]; then
    readonly cuetag='cuetag'
  elif [ -x "$(command -v 'cuetag.sh')" ]; then
    readonly cuetag='cuetag.sh'
  else
    err 'Neither cuetag nor cuetag.sh found.'
  fi
}

# converts a 24-bit FLAC file to a 16-bit FLAC file with ffmpeg(1).
#
# $1 is a FLAC file to be converted.
conv16() {
  staging_file="${1%.flac}-staging.flac"
  if ffmpeg -hide_banner -i "$1" -af aresample=osf=s16:osr=48000 "${staging_file}"; then
    mv "${staging_file}" "$1"
  else
    err 'Failed to convert 24-bit FLAC file to 16-bit.'
  fi
}

# pads the cuesheet with an extra 0 as a workaround for the following
# error when trying to use shnsplit(1) on a converted FLAC file:
#
# shnsplit: error: m:ss.ff format can only be used with CD-quality files
fix_cue() {
  digit_pair='[[:digit:]][[:digit:]]'
  regex="${digit_pair}:${digit_pair}:${digit_pair}"
  sed -i "s/${regex}/&0/" "$1"
}

splitflac() {
  [ -e "$2.bak" ] && err "$2.bak exists, exiting to prevent clobbering."
  if [ "${CONVERT}" = 'yes' ]; then
    # makes sense to check dependency only when it's really needed
    echo 'ffmpeg' | check_deps
    conv16 "$2" && fix_cue "$1"
  fi
  shnsplit -f "$1" -o flac -t '%n %t' -- "$2" \
    || err 'Unable to split the FLAC file.'
  mv -- "$2" "$2.bak"
  "${cuetag}" "$1" ./*.flac || err 'Unable to tag FLAC files.'
  [ "${DELETE}" = 'yes' ] && rm -- "$2.bak"
}

# no prereqs() here because two tiny functions would be the result. if
# prerequisites expand, it can be reexamined then.
main() {
  # cuetag is checked in assign_cuetag() rather than check_deps() since
  # the executable's name isn't consistent among operating systems.
  check_deps <<'EOF'
dos2unix
flac
shnsplit
EOF
  readonly args_needed=2
  while getopts cd opt; do
    case "${opt}" in
      c) readonly CONVERT='yes' ;;
      d) readonly DELETE='yes'  ;;
      *) usage                  ;;
    esac
  done
  shift $((OPTIND - 1))
  [ "$#" = "${args_needed}" ] || usage
  assign_cuetag
  dos2unix -- "$1" # removes ^M and other such irregularities from cuesheet
  splitflac "$1" "$2"
}

main "$@"
