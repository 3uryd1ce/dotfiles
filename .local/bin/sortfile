#!/usr/bin/env perl
# Copyright (c) 2022 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use v5.32;
use autodie;
use strict;
use warnings;

use File::Basename qw(fileparse);

my $program_name = fileparse $0;

sub usage {
	die <<EOT;
$program_name [file_to_sort] ...

$program_name will append '.bak' to the original file name.
$program_name removes redundant entries.
EOT
}

@ARGV or usage;

for my $unsorted_file (@ARGV) {
	unless ( eval {
		open my $unsorted_file_fh, '<', $unsorted_file;
		my %line_appearances;
		while ( my $line = <$unsorted_file_fh> ) {
			chomp $line;
			$line_appearances{$line}++;
		}
		close $unsorted_file_fh;

		rename $unsorted_file, "$unsorted_file.bak";

		open my $sorted_file_fh, '>', $unsorted_file;
		say $sorted_file_fh join( "\n", sort keys %line_appearances );
		close $sorted_file_fh;
	} )
	{
		print STDERR "Couldn't sort '$unsorted_file': $@" if $@;
	}
}
