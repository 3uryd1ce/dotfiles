#!/usr/bin/env sh
# shellcheck disable=SC1090
# Copyright (c) 2020-2021 Ashlen <eurydice@riseup.net>

# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.

# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
set -e
. "${HOME}/.local/bin/common.sh"

firebog=$(ftp -Vo - https://v.firebog.net/hosts/lists.php?type=tick)
tmpdir=$(mktemp -d)
raw_blocklist="${tmpdir}/raw_blocklist.txt"
tmp_blocklist="${tmpdir}/blocklist.txt"
blocklist="/etc/blocklist.txt"

backup() {
  if [ -f "${blocklist}" ]; then
    priv mv "${blocklist}" "${blocklist}.bak"
  fi
}

dl_blocklist() {
  for list in ${firebog}; do
    ftp -o - "${list}" >> "${raw_blocklist}"
  done
}

format_blocklist() {
  case "${dns}" in
    "unwind")
      (
      grep -E '^0.0.0.0' "${raw_blocklist}" \
        | awk '$1 == "0.0.0.0" {print $2}'

      grep -E '^127.0.0.1' "${raw_blocklist}" \
        | grep -v "localhost" \
        | awk '$1 == "127.0.0.1" {print $2}'

      # https://support.mozilla.org/en-US/kb/canary-domain-use-application-dnsnet
      printf "%s\\n" 'use-application-dns.net'
      )
      ;;
    "unbound")
      (
      grep -E '^0.0.0.0' "${raw_blocklist}" \
        | awk '$1 == "0.0.0.0" {print "local-zone: \""$2"\" always_refuse"}'

      grep -E '^127.0.0.1' "${raw_blocklist}" \
        | grep -v "localhost" \
        | awk '$1 == "127.0.0.1" {print "local-zone: \""$2"\" always_refuse"}'

      # https://support.mozilla.org/en-US/kb/canary-domain-use-application-dnsnet
      printf "%s\\n" 'local-zone: "use-application-dns.net" always_refuse'
      )
      ;;
  esac \
      | sed 's///g' \
      | sort \
      | uniq \
      >> "${tmp_blocklist}"
    # the sed expression gets rid of the '^M' control character in
    # blocklists

    # given that '^M' represents a carriage return, it may not display
    # properly in various places
}

install_blocklist() {
  priv /usr/bin/env sh <<EOF
cp "${tmp_blocklist}" "${blocklist}"
chmod 0444 "${blocklist}"
EOF
}

restart_dns() {
  case "${dns}" in
    "unwind")
      if unwind -n >/dev/null 2>&1; then
        priv rcctl restart unwind >/dev/null 2>&1
      elif [ -f "${blocklist}.bak" ]; then
        priv mv "${blocklist}.bak" "${blocklist}"
      else
        priv /usr/bin/env sh <<EOF
rm "${blocklist}"
touch "${blocklist}"
chmod 0444 "${blocklist}"
EOF
      fi
      ;;
    "unbound")
      if unbound-checkconf >/dev/null 2>&1; then
        priv rcctl restart unbound >/dev/null 2>&1
      elif [ -f "${blocklist}.bak" ]; then
        priv mv "${blocklist}.bak" "${blocklist}"
      else
        priv /usr/bin/env sh <<EOF
rm "${blocklist}"
touch "${blocklist}"
chmod 0444 "${blocklist}"
EOF
      fi
      ;;
  esac
}

rm_tmpdir() {
  rm -rf "${tmpdir:?}"
}

main() {
  if rcctl ls on 2>/dev/null | grep -qE "^unwind$"; then
    dns="unwind"
  elif rcctl ls on 2>/dev/null | grep -qE "^unbound$"; then
    dns="unbound"
  else
    err "Only unwind(8) and unbound(8) are supported. Enable one of them and try again."
  fi
  dl_blocklist || err "Unable to download lists from firebog.net."
  backup || err "Unable to backup blocklist file."
  format_blocklist || err "Unable to format blocklist."
  install_blocklist || err "Unable to install blocklist."
  restart_dns || err "Unable to restart DNS."
  rm_tmpdir || err "Unable to remove ${tmpdir}."
}

main
