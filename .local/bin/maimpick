#!/bin/sh
# shellcheck disable=SC1090

# rewrite of Luke Smith's maimpick
# https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/maimpick
# his dotfiles can be accessed here: https://github.com/LukeSmithxyz/voidrice

set -eu

err() {
	printf '%s\n' "$*" >&2
	exit 1
}

menu() {
	dmenu -i -fn 'mono-12' \
		-nb "${background:-#040516}" \
		-nf "${color3:-#9974e7}" \
		-sb "${background:-#040516}" \
		-sf "${foreground:-#e0cef3}" \
		"$@"
}

yankpic() {
	xclip -selection clipboard -t image/png ||
		err 'Unable to copy image data to clipboard.'
}

# --hide-cursor, --quiet, --capturebackground, --delay
maim_with_flags() { maim -uqBd 0.5 "$@"; }

present_options() {
	readonly SAVEDIR="${HOME}/screenshots"

	case "$(menu -l "${NUM_OF_OPTS}" -p 'Screenshot which area?')" in

		'a selected area')
			FILENAME="selected-$(date '+%Y%m%d-%H%M%S').png"
			readonly FILENAME

			maim_with_flags -s -- "${SAVEDIR}/${FILENAME}"
			;;

		'current window')
			FILENAME="window-$(date '+%Y%m%d-%H%M%S').png"
			readonly FILENAME

			maim_with_flags -i "$(xdotool getactivewindow)" -- "${SAVEDIR}/${FILENAME}"
			;;

		'full screen')
			FILENAME="full-$(date '+%Y%m%d-%H%M%S').png"
			readonly FILENAME

			maim_with_flags -- "${SAVEDIR}/${FILENAME}"
			;;

		'a selected area (copy)')
			maim_with_flags -s | yankpic
			;;

		'current window (copy)')
			maim_with_flags -i "$(xdotool getactivewindow)" | yankpic
			;;

		'full screen (copy)')
			maim_with_flags | yankpic
			;;

		*)
			err 'Not a valid area.'
			;;

	esac
}

readonly DEPENDENCIES='dmenu
maim
xclip
xdotool'

echo "${DEPENDENCIES}" | while read -r dependency; do
	command -v -- "${dependency}" > /dev/null 2>&1 ||
		err "${dependency} not found in PATH."
done

[ -n "${DISPLAY}" ] || err "${0##*/} requires a graphical environment."

readonly COLORS_SH="${XDG_CACHE_HOME:=${HOME}/.cache}/wal/colors.sh"
. "${COLORS_SH}"

readonly OPTIONS='a selected area
current window
full screen
a selected area (copy)
current window (copy)
full screen (copy)'

NUM_OF_OPTS="$(echo "${OPTIONS}" | wc -l)"
readonly NUM_OF_OPTS

echo "${OPTIONS}" | present_options
