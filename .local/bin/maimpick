#!/usr/bin/env sh
# shellcheck disable=SC1090

# rewrite of Luke Smith's maimpick
# https://github.com/LukeSmithxyz/voidrice/blob/master/.local/bin/maimpick
# his dotfiles can be accessed here: https://github.com/LukeSmithxyz/voidrice

# check that the library file is readable. if it is, source it so its
# functions are available. if not, exit due to potentially unpredictable
# behavior.
readonly library="${HOME}/.local/bin/common.sh"

if [ -r "${library}" ]; then
  . "${library}"

else
  cat >&2 <<EOF
${library} doesn't exist or isn't readable.
${0##*/} may not function correctly without it; exiting for safety.
EOF

  exit 1

fi


cur_date() {
  date '+%Y%m%d-%H%M%S'
}


yankpic() {
  yank -t image/png || err 'Unable to copy image data to clipboard.'
}


# --hide-cursor, --quiet, --capturebackground, --delay
maim_with_flags() {
  maim -uqBd 0.5 "$@"
}


present_options() {
  case "$(menu -l "${num_of_opts}" -p "Screenshot which area?")" in

    'a selected area')
      filename="selected-$(cur_date).png"
      readonly filename

      maim_with_flags -s -- "${savedir}/${filename}"

      ;;

    'current window')
      filename="window-$(cur_date).png"
      readonly filename

      maim_with_flags -i "$(xdotool getactivewindow)" -- "${savedir}/${filename}"

      ;;

    'full screen')
      filename="full-$(cur_date).png"
      readonly filename

      maim_with_flags -- "${savedir}/${filename}"

      ;;

    'a selected area (copy)')
      maim_with_flags -s | yankpic

      ;;

    'current window (copy)')
      maim_with_flags -i "$(xdotool getactivewindow)" | yankpic

      ;;

    'full screen (copy)')
      maim_with_flags | yankpic

      ;;

    *)
      err 'Not a valid area.'

      ;;

  esac
}


prereqs() {
  check_grafix

  check_deps <<'EOF'
dmenu
maim
xclip
xdotool
EOF

  import_colors_sh
}


prereqs

readonly options='a selected area
current window
full screen
a selected area (copy)
current window (copy)
full screen (copy)'

readonly savedir="${HOME}/screenshots"

num_of_opts="$(echo "${options}" | wc -l)"
readonly num_of_opts

echo "${options}" | present_options
