#!/usr/bin/env sh
# shellcheck disable=SC1090

# check that the library file is readable. if it is, source it so its
# functions are available. if not, exit due to potentially unpredictable
# behavior.
library="${HOME}/.local/bin/common.sh"

if [ -r "${library}" ]; then
  . "${library}"

else
  cat >&2 <<EOF
${library} doesn't exist or isn't readable.
${0##*/} may not function correctly without it; exiting for safety.
EOF

  exit 1

fi

import_colors_sh

while read -r file; do

  case "$1" in

    # delete file
    'd')
      really_delete="$(
        { echo 'Yes'
          echo 'No'
        } | menu -p "Really delete ${file}?"
      )"

      if [ "${really_delete}" = 'Yes' ]; then
        rm -- "${file}"
        notify-send -- "${file} deleted."
      fi

      ;;

    'm')
      filehandler -m "${file}"

      ;;

    'n')
      filehandler -n "${file}"

      ;;

    # rotate clockwise
    'r')
      convert -rotate 90 -- "${file}" "${file}"

      ;;

    # rotate counter-clockwise
    'R')
      convert -rotate -90 -- "${file}" "${file}"

      ;;

    # horizontally invert file, aka 'flop' it
    'f')
      convert -flop -- "${file}" "${file}"

      ;;

    # yank the relative file path
    'y')
      printf '%s' "${file}" | yank
      notify-send -- "ðŸ“‹ ${file} copied to clipboard."
      sleep 10 && clear_clip notify &

      ;;

    # yank the absolute file path
    'Y')
      abs_path_of_file="$(readlink -f -- "${file}")"

      printf '%s' "${abs_path_of_file}" | yank
      notify-send -- "ðŸ“‹ ${abs_path_of_file} copied to clipboard."
      sleep 10 && clear_clip notify &

      ;;

    *)
      err 'Key not bound.'

      ;;

  esac

done
