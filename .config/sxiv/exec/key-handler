#!/usr/bin/env sh
# shellcheck disable=SC1090

# check that the library file is readable. if it is, source it so its
# functions are available. if not, exit due to potentially unpredictable
# behavior.
library="${HOME}/.local/bin/common.sh"
if [ -r "${library}" ]; then
  . "${library}"
else
  cat >&2 <<EOF
${library} doesn't exist or isn't readable.
${0##*/} may not function correctly without it; exiting for safety.
EOF
  exit 1
fi

import_colors

: "${gnome_icon_dir:=/usr/local/share/icons/gnome/scalable}"
clip_icon="${gnome_icon_dir}/actions/edit-copy-symbolic.svg"

while read -r file; do
  case "$1" in
    # delete file
    'd')
      if [ "$(menu -p "Really delete ${file}?" <<'EOF'
Yes
No
EOF
      )" = 'Yes' ]; then
        rm "${file}"
        notify-send "${file} deleted."
      fi
      ;;

    'm')
      filehandler -m "${file}"
      ;;

    'n')
      filehandler -n "${file}"
      ;;

    # rotate clockwise
    'r')
      convert -rotate 90 "${file}" "${file}"
      ;;

    # rotate counter-clockwise
    'R')
      convert -rotate -90 "${file}" "${file}"
      ;;

    # horizontally invert file, aka 'flop' it
    'f')
      convert -flop "${file}" "${file}"
      ;;

    # yank the relative file path
    #
    # TODO: clear clipboard after a delay.
    'y')
      printf '%s\n' "${file}" | yank
      printf '%s\n' "${clip_icon}" | notify "${file} copied to clipboard."
      ;;

    # yank the absolute file path
    'Y')
      file="$(readlink -f "${file}")"

      printf '%s\n' "${file}" | yank
      printf '%s\n' "${clip_icon}" | notify "${file} copied to clipboard."
      ;;

  esac
done
