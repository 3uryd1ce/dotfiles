# Uses ANSI escape sequences to set up PS1.

err() {
	printf "%s\n" "$*" >&2
	printf "%s\n" "Custom PS1 not available." >&2
	return
}

# Print out the ANSI escape sequence for a color, affecting either
# the foreground or the background.
#
# $1 is either 'fg' or 'bg' (foreground; background).
# $2 is one of eight color names.
print_color_sequence() {
	sequence="\[\033["

	case "$1" in
		"fg") sequence="${sequence}3" ;;
		"bg") sequence="${sequence}4" ;;
		*) err "print_color_sequence: need 'fg' or 'bg'" ;;
	esac

	case "$2" in
		"black") sequence="${sequence}0m" ;;
		"red") sequence="${sequence}1m" ;;
		"green") sequence="${sequence}2m" ;;
		"yellow") sequence="${sequence}3m" ;;
		"blue") sequence="${sequence}4m" ;;
		"magenta") sequence="${sequence}5m" ;;
		"cyan") sequence="${sequence}6m" ;;
		"white") sequence="${sequence}7m" ;;
		*) err "print_color_sequence: need a color name" ;;
	esac

	sequence="${sequence}\]"

	printf '%s' "${sequence}"
	unset sequence
}

# Print out the ANSI escape sequence for a style modifier.
#
# $1 is one of nine modifier names.
print_modifier_sequence() {
	sequence="\[\033["

	case "$1" in
		"reset") sequence="${sequence}0m" ;;
		"bold") sequence="${sequence}1m" ;;
		"dim") sequence="${sequence}2m" ;;
		"italic") sequence="${sequence}3m" ;;
		"underline") sequence="${sequence}4m" ;;
		"blinking") sequence="${sequence}5m" ;;
		"reverse") sequence="${sequence}7m" ;;
		"hidden") sequence="${sequence}8m" ;;
		"strikethrough") sequence="${sequence}9m" ;;
		*) err "print_modifier_sequence: need a modifier name" ;;
	esac

	sequence="${sequence}\]"

	printf '%s' "${sequence}"
	unset sequence
}

# Wrap a string with the ANSI escape sequence for the given color and
# the ANSI sequence to reset colors.
#
# $1 is either 'fg' or 'bg' (foreground; background).
# $2 is one of eight colors.
# $3 is the string to wrap.
wrap_with_color_sequence() {
	fg_or_bg="$1"
	color_name="$2"
	string_to_wrap="$3"

	[ -n "${fg_or_bg}" ] || err "wrap_with_color_sequence: need 'fg' or 'bg'"
	[ -n "${color_name}" ] || err "wrap_with_color_sequence: need a color name"
	[ -n "${string_to_wrap}" ] || err "wrap_with_color_sequence: need a string to wrap"

	color_sequence="$(print_color_sequence "${fg_or_bg}" "${color_name}")"
	reset_sequence="$(print_modifier_sequence 'reset')"

	printf '%s%s%s' "${color_sequence}" "${string_to_wrap}" "${reset_sequence}"

	unset \
		fg_or_bg \
		color_name \
		string_to_wrap \
		color_sequence \
		reset_sequence
}

# Wrap a string with the ANSI escape sequence for the given style
# modifier and the ANSI sequence to reset styles.
#
# $1 is one of nine modifier names.
# $2 is the string to wrap.
wrap_with_modifier_sequence() {
	modifier_name="$1"
	string_to_wrap="$2"

	[ -n "${modifier_name}" ] || err "wrap_with_modifier_sequence: need a modifier name"
	[ -n "${string_to_wrap}" ] || err "wrap_with_modifier_sequence: need a string to wrap"

	modifier_sequence="$(print_modifier_sequence "${modifier_name}" "${string_to_wrap}")"
	reset_sequence="$(print_modifier_sequence 'reset')"

	printf '%s%s%s' "${modifier_sequence}" "${string_to_wrap}" "${reset_sequence}"

	unset \
		modifier_name \
		string_to_wrap \
		modifier_sequence \
		reset_sequence
}

_left_bracket="$(wrap_with_color_sequence "fg" "blue" "[")"
_right_bracket="$(wrap_with_color_sequence "fg" "blue" "]")"

_hostname="$(wrap_with_color_sequence "fg" "magenta" "\h")"
_user="$(wrap_with_color_sequence "fg" "cyan" "\u")"
_path="$(wrap_with_color_sequence "fg" "red" "\w")"

export PS1="${_left_bracket}${_user}@${_hostname} ${_path}${_right_bracket}\\$ "

unset \
	_left_bracket \
	_right_bracket \
	_hostname \
	_user \
	_path
